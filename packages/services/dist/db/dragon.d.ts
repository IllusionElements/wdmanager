/// <reference types="mongoose" />
import { ObjectID } from "mongodb";
import { TypeOfSchema } from "./types/TypeOfSchema";
import { Level } from "./level";
interface Dragon {
    _id: ObjectID;
    levels?: Level[];
}
declare const dragSchema: {
    readonly identifier: StringConstructor;
    readonly inBundle: NumberConstructor;
    readonly displayName: StringConstructor;
    readonly defaultSceneFile: StringConstructor;
    readonly dragonClass: StringConstructor;
    readonly dragonType: StringConstructor;
    readonly defaultRarity: NumberConstructor;
    readonly elementIdentifier: StringConstructor;
    readonly displayDescription: StringConstructor;
    readonly defaultDiscoveredImage: StringConstructor;
    readonly undiscoveredImage: StringConstructor;
    readonly defaultIconFilename: StringConstructor;
    readonly iconFilenameLocked: StringConstructor;
    readonly upgradeCSVFileName: StringConstructor;
    readonly fidgets: StringConstructor;
    readonly minRange: NumberConstructor;
    readonly unlockAchievement: StringConstructor;
    readonly attackStartVal: NumberConstructor;
    readonly sellBasePrice: StringConstructor;
    readonly unavailableSpellTypes: StringConstructor;
    readonly showcaseNodeLocation: StringConstructor;
    readonly isAttainable: NumberConstructor;
    readonly sortPriority: NumberConstructor;
    readonly minDragonLevelForBreeding: NumberConstructor;
    readonly minBreedingCaveBuildingLevelToBreed: NumberConstructor;
    readonly incubationBuildingLevelRequirement: NumberConstructor;
    readonly defaultMaxLevel: NumberConstructor;
    readonly researchMaxLevelIncrease: NumberConstructor;
    readonly eggCurrencyType: StringConstructor;
    readonly eggDisplaySceneFile: StringConstructor;
    readonly defaultAttackBoostRange: StringConstructor;
    readonly defaultHPBoostRange: StringConstructor;
    readonly canSell: NumberConstructor;
    readonly canUpgrade: NumberConstructor;
    readonly canBeSummoned: NumberConstructor;
    readonly deathPenaltyPercentage: NumberConstructor;
    readonly defaultTierNumber: NumberConstructor;
    readonly showInStable: NumberConstructor;
    readonly priorityWithinTier: NumberConstructor;
    readonly numberOfFragmentsNeeded: NumberConstructor;
    readonly isShrineDragon: NumberConstructor;
    readonly isGoldDragon: NumberConstructor;
    readonly limitedTimeOfferDragonActiveEvent: StringConstructor;
    readonly limitedTimeOfferDragonParentsInfoFile: StringConstructor;
    readonly isEvolveDragon: NumberConstructor;
    readonly canPlaceIntoPerch: NumberConstructor;
    readonly isUnbreedableDragon: NumberConstructor;
    readonly buffEndTime: NumberConstructor;
    readonly h: StringConstructor;
};
export declare type IDragon = TypeOfSchema<typeof dragSchema> & Dragon;
export declare const Dragons: import("mongoose").Model<import("mongoose").Document, {}>;
export {};
