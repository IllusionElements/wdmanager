type Deck {
  _id: ID!
  id: String!
  distribution: Int
  probability: Float
}
input Parent {
  first: String!
  second: String!
}

input Child {
  child: ID!
}

type Parents {
  first: Dragon
  second: Dragon
}

type Deck {
  _id: String
  name: String
  distribution: Int
  probability: Float
  fragments: Int
}

type Breed {
  _id: ID!
  identifier: String!
  parents: Parents
  egg: Float
  breedDeck: [Deck]
}
type Query {
  dragons: [Dragon]
  tiers: [Tier]
  dragon(name: String!): [Dragon]
  tier(key: String!): [Tier]
  dragonParents(child: Child!): [Dragon]
  dragonChildren(parents: Parent!): [Deck]
}
